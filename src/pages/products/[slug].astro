---
import { actions } from "astro:actions";
import MainLayout from "@layouts/MainLayout.astro";
import ProductSlideshow from "@components/products/ProductSlideshow.astro";

const { slug } = Astro.params;

const {data, error} = await Astro.callAction(actions.getProductBySlug, slug ?? '');
if (error) {
  return Astro.redirect('/404');
}

const { product, images} = data;
---

<MainLayout
  title={product.title}
  description={product.description}
>
  <div class="grid grid-cols-1 md:grid-cols-3 w-full gap-4">
    <ProductSlideshow images={images} />

    <section>
      <h2 class="text-2xl font-bold">{product.title}</h2>
      <h2 class="font-bold">${product.price}</h2>

      <h3 class="mt-5">Tallas</h3>
      <ul class="flex gap-3">
        {
          product.sizes
            .split(',')
            .map((size) => <li data-size={size}>{size}</li>)
        }
      </ul>

      <h3 class="mt-5">Cantidad</h3>
      <div>
        <button class="btn-quantity">-</button>
        <input type="number" min="1" value="1" />
        <button class="btn-quantity">+</button>
      </div>

      <button class="mt-5 bg-blue-500 text-white p-3 w-full disabled:bg-gray-500"
        >Añadir al carrito</button
      >

      <h3 class="mt-10">Descripción</h3>
      <p>{product.description}</p>
    </section>
  </div>

  <input type="hidden" id="product-id" value={product.id} />
</MainLayout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const productIdInput = document.getElementById('product-id') as HTMLInputElement;
    const sizeElements = document.querySelectorAll('ul li');
    const quantityInput = document.querySelector('input[type="number"]') as HTMLInputElement;
    const [btnDecrement, btnIncrement, addToCartButton] = document.querySelectorAll('button');

    sizeElements.forEach(item => {
      item.addEventListener('click', () => {
        // Remove 'selected-size' class from all items
        sizeElements.forEach(li => li.classList.remove('selected-size'));
        // Add 'selected-size' class to the clicked item
        item.classList.add('selected-size');
      });
    });

    btnDecrement.addEventListener('click', () => {
      let currentValue = parseInt(quantityInput.value);
      if (currentValue > 1) {
        quantityInput.value = (currentValue - 1).toString();
      }
    });

    btnIncrement.addEventListener('click', () => {
      let currentValue = parseInt(quantityInput.value);
      if (currentValue < 5) {
        quantityInput.value = (currentValue + 1).toString();
      }
    });

    addToCartButton.addEventListener('click', () => {
      const selectedSize = document.querySelector('ul li.selected-size')
      if (!selectedSize) {
        return alert('Por favor, selecciona una talla.');
      }

      addToCartButton.disabled = true;
      const size = selectedSize.textContent;
      const quantity = quantityInput.value;
      const productId = productIdInput.value;

      console.log({
        productId,
        size,
        quantity
      });
    });
  });
</script>

<style>
    @reference 'tailwindcss';
  h3 {
    @apply font-bold;
  }

  li {
    @apply hover:underline cursor-pointer;
  }

  .selected-size {
    @apply text-blue-500 underline font-bold transition-all;
  }

  .btn-quantity {
    @apply w-10 text-center p-2 border border-gray-300 hover:bg-gray-100 cursor-pointer;
  }

  input {
    @apply w-16 text-center p-2 border border-gray-300;
  }

  input[type='number']::-webkit-outer-spin-button,
  input[type='number']::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  input[type='number'] {
    -moz-appearance: textfield; /* Para Firefox */
  }
</style>